<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav') %>
  </header>

  <div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
      <label>Login</label>
      <input id="login" type="text" name="login" />
      <label>Password</label>
      <input type="password" name="password" />
      <button>Log in</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
  </div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>

  window.onload = () => {
    console.log('Running onload')
    const firebaseConfig = {
      apiKey: "AIzaSyB-aKt9miX0iPmj8DpN0SZ2ilKX26lsm3s",
      authDomain: "ruffhouse-511e0.firebaseapp.com",
      projectId: "ruffhouse-511e0",
      storageBucket: "ruffhouse-511e0.appspot.com",
      messagingSenderId: "141768514614",
      appId: "1:141768514614:web:2fd9edaa781339cd5ecc97",
      measurementId: "G-LM1RSY4LGC"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", async (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard
        try {
          const userCredential = await app.auth().createUserWithEmailAndPassword(login, password) 
          // Signed in 
          const user = userCredential.user;
          const idToken = await user.getIdToken()
          // Create new Session with Token
          await fetch('/sessionLogin', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ idToken })
          });
          window.location.href = '/dashboard'

        } catch (error) {
          const errorCode = error.code;
          const errorMessage = error.message;
          console.log(errorCode, errorMessage)
        }
        

        // app.auth().createUserWithEmailAndPassword(login, password)
        //   .then((userCredential) => {
        //     // Signed in 
        //     const user = userCredential.user;

        //     user.getIdToken().then((idToken) => {
        //       // Manage it Server Side
        //       fetch('/sessionLogin', {
        //         method: 'POST',
        //         headers: { 'Content-Type': 'application/json' },
        //         body: JSON.stringify({ idToken })
        //       }).then(() => {
        //         window.location.href = '/dashboard'
        //       })
        //     })
        //       .catch((error) => {
        //         const errorCode = error.code;
        //         const errorMessage = error.message;
        //         console.log(errorCode, errorMessage)
        //         // ..
        //       });
        //     //return false;
        //   });
      });
  }
</script>

</html>